name: Docker Build & Push to AWS ECR (Dynamic Microservices)

on:
  push:
    branches:
      - main
    paths:
      - 'microservices/**'

jobs:
  build-and-push:
    name: Build & Push Updated Microservice
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Debug GitHub Actions Context
        run: env

      - name: Debug OIDC Token
        run: |
          echo "Checking OIDC token request..."
          if [[ -z "${ACTIONS_ID_TOKEN_REQUEST_URL}" ]]; then
            echo "Error: ACTIONS_ID_TOKEN_REQUEST_URL is empty!"
            exit 1
          fi
          curl -v -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
               "${ACTIONS_ID_TOKEN_REQUEST_URL}?audience=sts.amazonaws.com" || echo "OIDC Token Request Failed"
          echo "OIDC Token Request Complete."

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::796973508195:role/GitHubActionsRole
          role-session-name: GitHubActions
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Determine Which Microservice Changed
        id: determine-service
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q "microservices/product-service/"; then
            echo "SERVICE_NAME=product-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/cart-service/"; then
            echo "SERVICE_NAME=cart-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/order-service/"; then
            echo "SERVICE_NAME=order-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/inventory-service/"; then
            echo "SERVICE_NAME=inventory-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/payment-service/"; then
            echo "SERVICE_NAME=payment-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/user-auth-service/"; then
            echo "SERVICE_NAME=user-auth-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/notification-service/"; then
            echo "SERVICE_NAME=notification-service" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -q "microservices/search-service/"; then
            echo "SERVICE_NAME=search-service" >> $GITHUB_ENV
          else
            echo "No microservice change detected. Skipping build."
            exit 0
          fi

      - name: Build, Tag, and Push Docker Image to AWS ECR
        run: |
          if [ -z "$SERVICE_NAME" ]; then
            echo "No relevant changes detected. Skipping build."
            exit 0
          fi

          echo "Building Docker image for $SERVICE_NAME..."
          docker build -t 796973508195.dkr.ecr.us-east-1.amazonaws.com/ecomdev/$SERVICE_NAME:latest ./microservices/$SERVICE_NAME
          
          echo "Pushing Docker image to ECR..."
          docker push 796973508195.dkr.ecr.us-east-1.amazonaws.com/ecomdev/$SERVICE_NAME:latest
